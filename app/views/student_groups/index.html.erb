<%= javascript_include_tag "MultiSelect" %>
<%= javascript_include_tag "ItemSelector" %>

<% javascript_tag do %>

  var addGroup = function(group) {
    var record = new Global.group_store.recordType(group);
    record.phantom = false;
    record.id = group.id;
    Global.group_store.add(record);
    Global.group_store.sort("year", "ASC");
    var index = Global.group_store.indexOfId(group.id);
    Global.group_grid.getView().focusRow(index);
    Global.group_grid.getSelectionModel().selectRow(index);
  }
  
  var scheduleAlert = function() {
    Ext.MessageBox.show({ title: 'SMS', msg: 'Вы не можете удалить этот класс, так как уже составлено расписание.', icon: Ext.MessageBox.ERROR, buttons: Ext.MessageBox.OK })
  }
  
  var deleteGroup = function(id) {
    Global.group_store.remove(Global.group_store.getById(id));
  }

  var notifyGroup = function(id) {
    Ext.MessageBox.show({
      title: 'SMS',
      msg: String.format('Письма с успеваемостями {0} были успешно посланы.', Global.group_store.getById(id).get('full_name')),
      icon: Ext.MessageBox.INFO,
      buttons: Ext.MessageBox.OK
    })
  }
  
  Ext.onReady(function() {
    
    <%= school_year_store %>
    
    Global.group_store = <%= extjs_simple_store :data => student_group_collection(@student_groups), :type => :arrays, :fields => [ "id", "full_name", "year" ], :sortInfo => { :field => "year", :direction => "ASC" }, :remoteSort => false %>;

    Global.teacher_store = <%= extjs_simple_store :data => teacher_collection(@teachers), :type => :arrays, :fields => [ "id", "full_name" ] %>;
    
    var cm = <%= extjs_grid_column_model([
      { :header => "id", :hidden => true },
      { :header => "Класс", :width => 100 }
    ]) %>;
    
    var sm = new Ext.grid.RowSelectionModel({
      singleSelect: true,
      listeners: {
        rowselect: function(sm, index, r) {
          Global.selectedGroup = r;
          Global.group_data.load({
            url: '<%= url_for :action => "edit" %>',
            params: { id: Global.selectedGroup.get("id") },
            scripts: true
          });
        }
      }
    });
    
    Global.group_grid = <%= extjs_grid :store => "Global.group_store".j, :width => 100, :height => 400,
      :cm => "cm".j, :sm => "sm".j, :title => "", :flex => 1 %>;

    Global.group_data = new Ext.Panel({
      flex: 4,
      bodyCfg: {
        id: 'group_form_container'
      }
    });
    
		var panel = new Ext.Panel({
			renderTo: "groups",
			width: 788,
			height: 400,
			title: "Классы",
      
      tbar: [
			{
        iconCls: 'x-btn-text-icon add',
        text: 'Добавить',
        handler: function() {
          Global.group_data.load({
            url: '<%= new_student_group_url %>',
            scripts: true
          });
        }
  		},
  		<%= extjs_toolbar_button("Удалить", { :iconCls => "x-btn-text-icon remove" }, { :handler => "function() {
  		  
        Ext.Msg.show({
          title: 'SMS',
          msg: 'Удалить этот класс?',
          buttons: Ext.Msg.YESNO,
          fn: function(button, text) {
            if (button == 'yes') {
              Ext.Ajax.request({
                method: 'DELETE', 
                url: '#{student_groups_path}/' + Global.group_grid.getSelectionModel().getSelected().get('id')
              });
            }
          },
          icon: Ext.MessageBox.QUESTION
        });
      } ".j}).to_json %>,
      {
        iconCls: 'x-btn-text-icon reply-message',
        text: 'Послать успеваемость класса',
        handler: function() {
          Ext.Ajax.request({
            method: 'POST',
            url: '<%= url_for(:action => 'notify', :controller => 'student_groups') %>'
                + '/'+ Global.group_grid.getSelectionModel().getSelected().get('id')
          });
        }
  	  }],
  		layout: {
  		  type: 'hbox',
  		  align: 'stretch' 
  		},
  		items: [
  		  Global.group_grid, 
  		  Global.group_data
		  ]
		});
		
		Global.observe("groupUpdated", function(config) {
      var record = Global.group_grid.getSelectionModel().getSelected();
      record.set("full_name", config["student_group[year]"] + " " + config["student_group[letter]"]);
      record.commit();
      Global.group_store.sort( [ { field : 'year', direction: 'ASC' }, { field : 'full_name', direction: 'ASC' } ], 'ASC');
    });
	});
<% end %>
<div class="groups-container">
  <div id="groups"></div>
</div>